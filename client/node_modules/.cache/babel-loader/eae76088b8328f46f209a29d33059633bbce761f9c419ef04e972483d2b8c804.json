{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Notes_world\\\\educational-website\\\\client\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const AdminPanel = () => {\n//   const navigate = useNavigate();\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const userRole = localStorage.getItem(\"role\");\n//     const token = localStorage.getItem(\"token\");\n\n//     if (!userRole || userRole !== \"admin\" || !token) {\n//       navigate(\"/login\");\n//       return;\n//     }\n\n//     fetchUsers(token);\n//   }, [navigate]);\n\n//   const fetchUsers = async (token) => {\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/users\", {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       if (!response.ok) throw new Error(\"Failed to fetch users\");\n\n//       const data = await response.json();\n//       setUsers(data);\n//     } catch (error) {\n//       console.error(\"Error fetching users:\", error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const changeRole = async (userId) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n\n//       const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\n//         body: JSON.stringify({ role: \"admin\" }),\n//       });\n\n//       if (!response.ok) throw new Error(\"Failed to update role\");\n\n//       fetchUsers(token);\n//     } catch (error) {\n//       console.error(\"Failed to update role:\", error);\n//     }\n//   };\n\n//   const deleteUser = async (userId) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n\n//       if (!token) {\n//         console.error(\"‚ùå No token found. User might not be logged in.\");\n//         return;\n//       }\n\n//       console.log(`üîπ Sending DELETE request for user ID: ${userId}`);\n\n//       const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       const data = await response.json();\n//       console.log(\"üîπ API Response:\", data);\n\n//       if (!response.ok) {\n//         throw new Error(data.message || \"Failed to delete user\");\n//       }\n\n//       console.log(\"‚úÖ User deleted successfully.\");\n//       fetchUsers(); // Refresh user list\n//     } catch (error) {\n//       console.error(\"‚ùå Failed to delete user:\", error);\n//     }\n//   };\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>Admin Panel</h2>\n\n//       {/* User Management */}\n//       <h3>User Management</h3>\n//       <table border=\"1\">\n//         <thead>\n//           <tr>\n//             <th>Username</th>\n//             <th>Email</th>\n//             <th>Role</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user._id}>\n//               <td>{user.username}</td>\n//               <td>{user.email}</td>\n//               <td>{user.role}</td>\n//               <td>\n//                 {user.role !== \"admin\" && (\n//                   <button onClick={() => changeRole(user._id)}>Promote to Admin</button>\n//                 )}\n//                 <button onClick={() => deleteUser(user._id)} style={{ marginLeft: \"10px\" }}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default AdminPanel;\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  useEffect(() => {\n    const userRole = localStorage.getItem(\"role\");\n    const token = localStorage.getItem(\"token\");\n    if (!userRole || userRole !== \"admin\" || !token) {\n      navigate(\"/login\");\n      return;\n    }\n    fetchUsers(token);\n    fetchNotes(token);\n  }, [navigate]);\n  const fetchUsers = async token => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch users\");\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchNotes = async token => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/notes\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch notes\");\n      const data = await response.json();\n      setNotes(data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n  const addNote = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:5000/api/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: newNote\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to add note\");\n      setNewNote(\"\"); // Clear input after adding\n      fetchNotes(token); // Refresh notes list\n    } catch (error) {\n      console.error(\"Error adding note:\", error);\n    }\n  };\n  const changeRole = async userId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          role: \"admin\"\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to update role\");\n      fetchUsers(token);\n    } catch (error) {\n      console.error(\"Failed to update role:\", error);\n    }\n  };\n  const deleteNote = async noteId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/notes/${noteId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error(\"Failed to delete note\");\n      fetchNotes(token); // Refresh notes list\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [user.role !== \"admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeRole(user._id),\n              children: \"Promote to Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteUser(user._id),\n              style: {\n                marginLeft: \"10px\"\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Notes Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newNote,\n        onChange: e => setNewNote(e.target.value),\n        placeholder: \"Enter new note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNote,\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [note.content, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note._id),\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"LUnOY3pmNO0upbMHqszYbS6HX0Q=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AdminPanel","_s","navigate","users","setUsers","loading","setLoading","notes","setNotes","newNote","setNewNote","userRole","localStorage","getItem","token","fetchUsers","fetchNotes","response","fetch","headers","Authorization","ok","Error","data","json","error","console","addNote","method","body","JSON","stringify","content","changeRole","userId","role","deleteNote","noteId","children","fileName","_jsxFileName","lineNumber","columnNumber","border","map","user","username","email","onClick","_id","deleteUser","style","marginLeft","type","value","onChange","e","target","placeholder","note","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/AdminPanel.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const AdminPanel = () => {\r\n//   const navigate = useNavigate();\r\n//   const [users, setUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const userRole = localStorage.getItem(\"role\");\r\n//     const token = localStorage.getItem(\"token\");\r\n\r\n//     if (!userRole || userRole !== \"admin\" || !token) {\r\n//       navigate(\"/login\");\r\n//       return;\r\n//     }\r\n\r\n//     fetchUsers(token);\r\n//   }, [navigate]);\r\n\r\n//   const fetchUsers = async (token) => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/users\", {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       if (!response.ok) throw new Error(\"Failed to fetch users\");\r\n\r\n//       const data = await response.json();\r\n//       setUsers(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching users:\", error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const changeRole = async (userId) => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n\r\n//       const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\r\n//         method: \"PUT\",\r\n//         headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n//         body: JSON.stringify({ role: \"admin\" }),\r\n//       });\r\n\r\n//       if (!response.ok) throw new Error(\"Failed to update role\");\r\n\r\n//       fetchUsers(token);\r\n//     } catch (error) {\r\n//       console.error(\"Failed to update role:\", error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   const deleteUser = async (userId) => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n\r\n//       if (!token) {\r\n//         console.error(\"‚ùå No token found. User might not be logged in.\");\r\n//         return;\r\n//       }\r\n\r\n//       console.log(`üîπ Sending DELETE request for user ID: ${userId}`);\r\n\r\n//       const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n//         method: \"DELETE\",\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       console.log(\"üîπ API Response:\", data);\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(data.message || \"Failed to delete user\");\r\n//       }\r\n\r\n//       console.log(\"‚úÖ User deleted successfully.\");\r\n//       fetchUsers(); // Refresh user list\r\n//     } catch (error) {\r\n//       console.error(\"‚ùå Failed to delete user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Admin Panel</h2>\r\n\r\n//       {/* User Management */}\r\n//       <h3>User Management</h3>\r\n//       <table border=\"1\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Username</th>\r\n//             <th>Email</th>\r\n//             <th>Role</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user._id}>\r\n//               <td>{user.username}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.role}</td>\r\n//               <td>\r\n//                 {user.role !== \"admin\" && (\r\n//                   <button onClick={() => changeRole(user._id)}>Promote to Admin</button>\r\n//                 )}\r\n//                 <button onClick={() => deleteUser(user._id)} style={{ marginLeft: \"10px\" }}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminPanel;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AdminPanel = () => {\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const userRole = localStorage.getItem(\"role\");\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (!userRole || userRole !== \"admin\" || !token) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    fetchUsers(token);\r\n    fetchNotes(token);\r\n  }, [navigate]);\r\n\r\n  const fetchUsers = async (token) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to fetch users\");\r\n\r\n      const data = await response.json();\r\n      setUsers(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchNotes = async (token) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/notes\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to fetch notes\");\r\n\r\n      const data = await response.json();\r\n      setNotes(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notes:\", error);\r\n    }\r\n  };\r\n\r\n  const addNote = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await fetch(\"http://localhost:5000/api/notes\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ content: newNote }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to add note\");\r\n\r\n      setNewNote(\"\"); // Clear input after adding\r\n      fetchNotes(token); // Refresh notes list\r\n    } catch (error) {\r\n      console.error(\"Error adding note:\", error);\r\n    }\r\n  };\r\n  \r\n    const changeRole = async (userId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n        body: JSON.stringify({ role: \"admin\" }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to update role\");\r\n\r\n      fetchUsers(token);\r\n    } catch (error) {\r\n      console.error(\"Failed to update role:\", error);\r\n    }\r\n  };\r\n  const deleteNote = async (noteId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await fetch(`http://localhost:5000/api/notes/${noteId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to delete note\");\r\n\r\n      fetchNotes(token); // Refresh notes list\r\n    } catch (error) {\r\n      console.error(\"Error deleting note:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Panel</h2>\r\n\r\n      {/* User Management */}\r\n      <h3>User Management</h3>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => (\r\n            <tr key={user._id}>\r\n              <td>{user.username}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.role}</td>\r\n              <td>\r\n                {user.role !== \"admin\" && (\r\n                  <button onClick={() => changeRole(user._id)}>Promote to Admin</button>\r\n                )}\r\n                <button onClick={() => deleteUser(user._id)} style={{ marginLeft: \"10px\" }}>\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Notes Management */}\r\n      <h3>Notes Management</h3>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newNote}\r\n          onChange={(e) => setNewNote(e.target.value)}\r\n          placeholder=\"Enter new note\"\r\n        />\r\n        <button onClick={addNote}>Add Note</button>\r\n      </div>\r\n      <ul>\r\n        {notes.map((note) => (\r\n          <li key={note._id}>\r\n            {note.content}\r\n            <button onClick={() => deleteNote(note._id)} style={{ marginLeft: \"10px\" }}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}