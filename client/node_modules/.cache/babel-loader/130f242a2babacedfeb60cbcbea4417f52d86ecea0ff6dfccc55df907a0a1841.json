{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import ReactQuill from \"react-quill\"; // Importing Quill editor\n// import { useNavigate } from \"react-router-dom\";\n// import \"react-quill/dist/quill.snow.css\"; // Import Quill's CSS\n// import './NoteManager.css'; // Importing the CSS file\n\n// const NoteManager = () => {\n//   const navigate = useNavigate();\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [note, setNote] = useState({ title: \"\", content: \"\" });\n//   const [editingNoteId, setEditingNoteId] = useState(null);\n\n//   // Fetch notes from localStorage\n//   useEffect(() => {\n//     const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n//     setNotes(storedNotes);\n//     setLoading(false);\n//   }, []);\n\n//   const modules = {\n//     toolbar: [\n//       [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n//       [{ list: \"ordered\" }, { list: \"bullet\" }],\n//       [\"bold\", \"italic\", \"underline\"],\n//       [{ align: [] }],\n//       [{ color: [] }, { background: [] }],\n//       [\"link\"],\n//       [\"blockquote\", \"code-block\"],\n//       [\"clean\"],\n//     ],\n//   };\n\n//   const saveNote = () => {\n//     const updatedNotes = [...notes];\n//     const newNote = { ...note, id: Date.now() };\n\n//     // Clean content by removing unwanted <p> tags\n//     const cleanedContent = note.content.replace(/<p>/g, '').replace(/<\\/p>/g, '');\n//     newNote.content = cleanedContent;\n\n//     if (editingNoteId) {\n//       const index = notes.findIndex((n) => n.id === editingNoteId);\n//       updatedNotes[index] = newNote;\n//     } else {\n//       updatedNotes.unshift(newNote); // Prepend the newly created note\n//     }\n\n//     // Save updated notes in localStorage\n//     localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n//     setNotes(updatedNotes);\n\n//     setNote({ title: \"\", content: \"\" });\n//     setEditingNoteId(null);\n//   };\n\n//   const editNote = (note) => {\n//     setEditingNoteId(note.id);\n//     setNote({ title: note.title, content: note.content });\n//   };\n\n//   const deleteNote = (noteId) => {\n//     const updatedNotes = notes.filter((n) => n.id !== noteId);\n//     localStorage.setItem(\"notes\", JSON.stringify(updatedNotes)); // Update localStorage\n//     setNotes(updatedNotes);\n//   };\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <div className=\"note-manager-container\">\n//       <h2>Note Manager</h2>\n\n//       <div className=\"note-editor\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           value={note.title}\n//           onChange={(e) => setNote({ ...note, title: e.target.value })}\n//           className=\"note-title-input\"\n//         />\n//         <ReactQuill\n//           value={note.content}\n//           onChange={(content) => setNote({ ...note, content })}\n//           modules={modules}\n//           className=\"note-content-quill\"\n//         />\n//         <button onClick={saveNote} className=\"save-button\">\n//           {editingNoteId ? \"Update Note\" : \"Add Note\"}\n//         </button>\n//       </div>\n\n//       <h3>All Notes</h3>\n//       <table className=\"notes-table\">\n//         <thead>\n//           <tr>\n//             <th>Title</th>\n//             <th>Content</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {notes.map((note) => (\n//             <tr key={note.id}>\n//               <td>{note.title}</td>\n//               <td>{note.content}</td>\n//               <td>\n//                 <button onClick={() => editNote(note)} className=\"edit-button\">\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => deleteNote(note.id)}\n//                   className=\"delete-button\"\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default NoteManager;","map":{"version":3,"names":[],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/NoteManager.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import ReactQuill from \"react-quill\"; // Importing Quill editor\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"react-quill/dist/quill.snow.css\"; // Import Quill's CSS\r\n// import './NoteManager.css'; // Importing the CSS file\r\n\r\n// const NoteManager = () => {\r\n//   const navigate = useNavigate();\r\n//   const [notes, setNotes] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [note, setNote] = useState({ title: \"\", content: \"\" });\r\n//   const [editingNoteId, setEditingNoteId] = useState(null);\r\n\r\n//   // Fetch notes from localStorage\r\n//   useEffect(() => {\r\n//     const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\r\n//     setNotes(storedNotes);\r\n//     setLoading(false);\r\n//   }, []);\r\n\r\n//   const modules = {\r\n//     toolbar: [\r\n//       [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\r\n//       [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n//       [\"bold\", \"italic\", \"underline\"],\r\n//       [{ align: [] }],\r\n//       [{ color: [] }, { background: [] }],\r\n//       [\"link\"],\r\n//       [\"blockquote\", \"code-block\"],\r\n//       [\"clean\"],\r\n//     ],\r\n//   };\r\n\r\n//   const saveNote = () => {\r\n//     const updatedNotes = [...notes];\r\n//     const newNote = { ...note, id: Date.now() };\r\n\r\n//     // Clean content by removing unwanted <p> tags\r\n//     const cleanedContent = note.content.replace(/<p>/g, '').replace(/<\\/p>/g, '');\r\n//     newNote.content = cleanedContent;\r\n\r\n//     if (editingNoteId) {\r\n//       const index = notes.findIndex((n) => n.id === editingNoteId);\r\n//       updatedNotes[index] = newNote;\r\n//     } else {\r\n//       updatedNotes.unshift(newNote); // Prepend the newly created note\r\n//     }\r\n\r\n//     // Save updated notes in localStorage\r\n//     localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\r\n//     setNotes(updatedNotes);\r\n\r\n//     setNote({ title: \"\", content: \"\" });\r\n//     setEditingNoteId(null);\r\n//   };\r\n\r\n//   const editNote = (note) => {\r\n//     setEditingNoteId(note.id);\r\n//     setNote({ title: note.title, content: note.content });\r\n//   };\r\n\r\n//   const deleteNote = (noteId) => {\r\n//     const updatedNotes = notes.filter((n) => n.id !== noteId);\r\n//     localStorage.setItem(\"notes\", JSON.stringify(updatedNotes)); // Update localStorage\r\n//     setNotes(updatedNotes);\r\n//   };\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div className=\"note-manager-container\">\r\n//       <h2>Note Manager</h2>\r\n\r\n//       <div className=\"note-editor\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Title\"\r\n//           value={note.title}\r\n//           onChange={(e) => setNote({ ...note, title: e.target.value })}\r\n//           className=\"note-title-input\"\r\n//         />\r\n//         <ReactQuill\r\n//           value={note.content}\r\n//           onChange={(content) => setNote({ ...note, content })}\r\n//           modules={modules}\r\n//           className=\"note-content-quill\"\r\n//         />\r\n//         <button onClick={saveNote} className=\"save-button\">\r\n//           {editingNoteId ? \"Update Note\" : \"Add Note\"}\r\n//         </button>\r\n//       </div>\r\n\r\n//       <h3>All Notes</h3>\r\n//       <table className=\"notes-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Title</th>\r\n//             <th>Content</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {notes.map((note) => (\r\n//             <tr key={note.id}>\r\n//               <td>{note.title}</td>\r\n//               <td>{note.content}</td>\r\n//               <td>\r\n//                 <button onClick={() => editNote(note)} className=\"edit-button\">\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => deleteNote(note.id)}\r\n//                   className=\"delete-button\"\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NoteManager;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}