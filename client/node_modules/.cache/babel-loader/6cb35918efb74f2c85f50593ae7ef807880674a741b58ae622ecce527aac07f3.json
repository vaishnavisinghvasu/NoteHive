{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Notes_world\\\\educational-website\\\\client\\\\src\\\\components\\\\NoteManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DOMPurify from \"dompurify\"; // ✅ For safe HTML rendering\nimport \"./NoteManager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteManager = () => {\n  _s();\n  const navigate = useNavigate();\n  const [notes, setNotes] = useState([]);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  const editorRef = useRef(null);\n\n  // Load notes from localStorage\n  useEffect(() => {\n    const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n    setNotes(storedNotes);\n  }, []);\n\n  // Apply formatting\n  const formatText = command => {\n    document.execCommand(command, false, null);\n  };\n  const saveNote = () => {\n    const content = editorRef.current.innerHTML; // Get formatted content\n\n    if (!note.title.trim() || !content.trim()) {\n      alert(\"Title and content cannot be empty.\");\n      return;\n    }\n    const updatedNotes = [...notes];\n    const newNote = {\n      ...note,\n      content,\n      id: editingNoteId || Date.now()\n    };\n    if (editingNoteId) {\n      const index = updatedNotes.findIndex(n => n.id === editingNoteId);\n      if (index !== -1) updatedNotes[index] = newNote;\n    } else {\n      updatedNotes.unshift(newNote);\n    }\n    setNotes(updatedNotes);\n    localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingNoteId(null);\n    editorRef.current.innerHTML = \"\"; // Clear editor\n  };\n  const editNote = note => {\n    setEditingNoteId(note.id);\n    setNote({\n      title: note.title\n    });\n    editorRef.current.innerHTML = note.content; // Load content into editor\n  };\n  const deleteNote = noteId => {\n    const updatedNotes = notes.filter(n => n.id !== noteId);\n    setNotes(updatedNotes);\n    localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-manager-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Note Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: note.title,\n        onChange: e => setNote({\n          ...note,\n          title: e.target.value\n        }),\n        className: \"note-title-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => formatText(\"bold\"),\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => formatText(\"italic\"),\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => formatText(\"underline\"),\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => formatText(\"insertOrderedList\"),\n          children: \"1.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => formatText(\"insertUnorderedList\"),\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: editorRef,\n        contentEditable: true,\n        className: \"note-content-editor\",\n        placeholder: \"Write your note here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveNote,\n        className: \"save-button\",\n        children: editingNoteId ? \"Update Note\" : \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"notes-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-content\",\n              dangerouslySetInnerHTML: {\n                __html: DOMPurify.sanitize(note.content) // ✅ Safe rendering\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editNote(note),\n              className: \"edit-button\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteNote(note.id),\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteManager, \"NuxNaUhB+HIeJqy4Z9cPIrluei0=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteManager;\nexport default NoteManager;\nvar _c;\n$RefreshReg$(_c, \"NoteManager\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","DOMPurify","jsxDEV","_jsxDEV","NoteManager","_s","navigate","notes","setNotes","note","setNote","title","content","editingNoteId","setEditingNoteId","editorRef","storedNotes","JSON","parse","localStorage","getItem","formatText","command","document","execCommand","saveNote","current","innerHTML","trim","alert","updatedNotes","newNote","id","Date","now","index","findIndex","n","unshift","setItem","stringify","editNote","deleteNote","noteId","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","ref","contentEditable","map","dangerouslySetInnerHTML","__html","sanitize","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/NoteManager.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DOMPurify from \"dompurify\"; // ✅ For safe HTML rendering\r\nimport \"./NoteManager.css\";\r\n\r\nconst NoteManager = () => {\r\n  const navigate = useNavigate();\r\n  const [notes, setNotes] = useState([]);\r\n  const [note, setNote] = useState({ title: \"\", content: \"\" });\r\n  const [editingNoteId, setEditingNoteId] = useState(null);\r\n  const editorRef = useRef(null);\r\n\r\n  // Load notes from localStorage\r\n  useEffect(() => {\r\n    const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\r\n    setNotes(storedNotes);\r\n  }, []);\r\n\r\n  // Apply formatting\r\n  const formatText = (command) => {\r\n    document.execCommand(command, false, null);\r\n  };\r\n\r\n  const saveNote = () => {\r\n    const content = editorRef.current.innerHTML; // Get formatted content\r\n\r\n    if (!note.title.trim() || !content.trim()) {\r\n      alert(\"Title and content cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    const updatedNotes = [...notes];\r\n    const newNote = { ...note, content, id: editingNoteId || Date.now() };\r\n\r\n    if (editingNoteId) {\r\n      const index = updatedNotes.findIndex((n) => n.id === editingNoteId);\r\n      if (index !== -1) updatedNotes[index] = newNote;\r\n    } else {\r\n      updatedNotes.unshift(newNote);\r\n    }\r\n\r\n    setNotes(updatedNotes);\r\n    localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\r\n    setNote({ title: \"\", content: \"\" });\r\n    setEditingNoteId(null);\r\n    editorRef.current.innerHTML = \"\"; // Clear editor\r\n  };\r\n\r\n  const editNote = (note) => {\r\n    setEditingNoteId(note.id);\r\n    setNote({ title: note.title });\r\n    editorRef.current.innerHTML = note.content; // Load content into editor\r\n  };\r\n\r\n  const deleteNote = (noteId) => {\r\n    const updatedNotes = notes.filter((n) => n.id !== noteId);\r\n    setNotes(updatedNotes);\r\n    localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\r\n  };\r\n\r\n  return (\r\n    <div className=\"note-manager-container\">\r\n      <h2>Note Manager</h2>\r\n\r\n      <div className=\"note-editor\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={note.title}\r\n          onChange={(e) => setNote({ ...note, title: e.target.value })}\r\n          className=\"note-title-input\"\r\n        />\r\n\r\n        {/* Formatting Toolbar */}\r\n        <div className=\"toolbar\">\r\n          <button onClick={() => formatText(\"bold\")}>B</button>\r\n          <button onClick={() => formatText(\"italic\")}>I</button>\r\n          <button onClick={() => formatText(\"underline\")}>U</button>\r\n          <button onClick={() => formatText(\"insertOrderedList\")}>1.</button>\r\n          <button onClick={() => formatText(\"insertUnorderedList\")}>•</button>\r\n        </div>\r\n\r\n        {/* Editable Div for Content */}\r\n        <div\r\n          ref={editorRef}\r\n          contentEditable\r\n          className=\"note-content-editor\"\r\n          placeholder=\"Write your note here...\"\r\n        ></div>\r\n\r\n        <button onClick={saveNote} className=\"save-button\">\r\n          {editingNoteId ? \"Update Note\" : \"Add Note\"}\r\n        </button>\r\n      </div>\r\n\r\n      <h3>All Notes</h3>\r\n      <table className=\"notes-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Content</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notes.map((note) => (\r\n            <tr key={note.id}>\r\n              <td>{note.title}</td>\r\n              <td>\r\n                <div\r\n                  className=\"note-content\"\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: DOMPurify.sanitize(note.content), // ✅ Safe rendering\r\n                  }}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button onClick={() => editNote(note)} className=\"edit-button\">\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => deleteNote(note.id)}\r\n                  className=\"delete-button\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteManager;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,WAAW,CAAC,CAAC;AACnC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC;IAAEc,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAC5D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMkB,SAAS,GAAGhB,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACnEZ,QAAQ,CAACQ,WAAW,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,UAAU,GAAIC,OAAO,IAAK;IAC9BC,QAAQ,CAACC,WAAW,CAACF,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC;EAC5C,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMb,OAAO,GAAGG,SAAS,CAACW,OAAO,CAACC,SAAS,CAAC,CAAC;;IAE7C,IAAI,CAAClB,IAAI,CAACE,KAAK,CAACiB,IAAI,CAAC,CAAC,IAAI,CAAChB,OAAO,CAACgB,IAAI,CAAC,CAAC,EAAE;MACzCC,KAAK,CAAC,oCAAoC,CAAC;MAC3C;IACF;IAEA,MAAMC,YAAY,GAAG,CAAC,GAAGvB,KAAK,CAAC;IAC/B,MAAMwB,OAAO,GAAG;MAAE,GAAGtB,IAAI;MAAEG,OAAO;MAAEoB,EAAE,EAAEnB,aAAa,IAAIoB,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC;IAErE,IAAIrB,aAAa,EAAE;MACjB,MAAMsB,KAAK,GAAGL,YAAY,CAACM,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,KAAKnB,aAAa,CAAC;MACnE,IAAIsB,KAAK,KAAK,CAAC,CAAC,EAAEL,YAAY,CAACK,KAAK,CAAC,GAAGJ,OAAO;IACjD,CAAC,MAAM;MACLD,YAAY,CAACQ,OAAO,CAACP,OAAO,CAAC;IAC/B;IAEAvB,QAAQ,CAACsB,YAAY,CAAC;IACtBX,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAEtB,IAAI,CAACuB,SAAS,CAACV,YAAY,CAAC,CAAC;IAC3DpB,OAAO,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IACnCE,gBAAgB,CAAC,IAAI,CAAC;IACtBC,SAAS,CAACW,OAAO,CAACC,SAAS,GAAG,EAAE,CAAC,CAAC;EACpC,CAAC;EAED,MAAMc,QAAQ,GAAIhC,IAAI,IAAK;IACzBK,gBAAgB,CAACL,IAAI,CAACuB,EAAE,CAAC;IACzBtB,OAAO,CAAC;MAAEC,KAAK,EAAEF,IAAI,CAACE;IAAM,CAAC,CAAC;IAC9BI,SAAS,CAACW,OAAO,CAACC,SAAS,GAAGlB,IAAI,CAACG,OAAO,CAAC,CAAC;EAC9C,CAAC;EAED,MAAM8B,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAMb,YAAY,GAAGvB,KAAK,CAACqC,MAAM,CAAEP,CAAC,IAAKA,CAAC,CAACL,EAAE,KAAKW,MAAM,CAAC;IACzDnC,QAAQ,CAACsB,YAAY,CAAC;IACtBX,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAEtB,IAAI,CAACuB,SAAS,CAACV,YAAY,CAAC,CAAC;EAC7D,CAAC;EAED,oBACE3B,OAAA;IAAK0C,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC3C,OAAA;MAAA2C,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErB/C,OAAA;MAAK0C,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B3C,OAAA;QACEgD,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE5C,IAAI,CAACE,KAAM;QAClB2C,QAAQ,EAAGC,CAAC,IAAK7C,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEE,KAAK,EAAE4C,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC,CAAE;QAC7DR,SAAS,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAGF/C,OAAA;QAAK0C,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtB3C,OAAA;UAAQsD,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAAC,MAAM,CAAE;UAAAyB,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrD/C,OAAA;UAAQsD,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAAC,QAAQ,CAAE;UAAAyB,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvD/C,OAAA;UAAQsD,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAAC,WAAW,CAAE;UAAAyB,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1D/C,OAAA;UAAQsD,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAAC,mBAAmB,CAAE;UAAAyB,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnE/C,OAAA;UAAQsD,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAAC,qBAAqB,CAAE;UAAAyB,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eAGN/C,OAAA;QACEuD,GAAG,EAAE3C,SAAU;QACf4C,eAAe;QACfd,SAAS,EAAC,qBAAqB;QAC/BO,WAAW,EAAC;MAAyB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eAEP/C,OAAA;QAAQsD,OAAO,EAAEhC,QAAS;QAACoB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAC/CjC,aAAa,GAAG,aAAa,GAAG;MAAU;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN/C,OAAA;MAAA2C,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB/C,OAAA;MAAO0C,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC5B3C,OAAA;QAAA2C,QAAA,eACE3C,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAA2C,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd/C,OAAA;YAAA2C,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChB/C,OAAA;YAAA2C,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR/C,OAAA;QAAA2C,QAAA,EACGvC,KAAK,CAACqD,GAAG,CAAEnD,IAAI,iBACdN,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAA2C,QAAA,EAAKrC,IAAI,CAACE;UAAK;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB/C,OAAA;YAAA2C,QAAA,eACE3C,OAAA;cACE0C,SAAS,EAAC,cAAc;cACxBgB,uBAAuB,EAAE;gBACvBC,MAAM,EAAE7D,SAAS,CAAC8D,QAAQ,CAACtD,IAAI,CAACG,OAAO,CAAC,CAAE;cAC5C;YAAE;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACL/C,OAAA;YAAA2C,QAAA,gBACE3C,OAAA;cAAQsD,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAAChC,IAAI,CAAE;cAACoC,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAE/D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT/C,OAAA;cACEsD,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAACjC,IAAI,CAACuB,EAAE,CAAE;cACnCa,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC1B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA,GApBEzC,IAAI,CAACuB,EAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC7C,EAAA,CAhIID,WAAW;EAAA,QACEJ,WAAW;AAAA;AAAAgE,EAAA,GADxB5D,WAAW;AAkIjB,eAAeA,WAAW;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}