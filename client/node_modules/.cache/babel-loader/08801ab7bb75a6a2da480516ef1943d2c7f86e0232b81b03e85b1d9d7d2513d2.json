{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Notes_world\\\\educational-website\\\\client\\\\src\\\\components\\\\NoteManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport DOMPurify from \"dompurify\"; // ✅ Prevents raw HTML injection\nimport \"react-quill/dist/quill.snow.css\";\nimport \"./NoteManager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteManager = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  useEffect(() => {\n    const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n    setNotes(storedNotes);\n    setLoading(false);\n  }, []);\n  const modules = {\n    toolbar: [[{\n      header: \"1\"\n    }, {\n      header: \"2\"\n    }, {\n      font: []\n    }], [{\n      list: \"ordered\"\n    }, {\n      list: \"bullet\"\n    }], [\"bold\", \"italic\", \"underline\"], [{\n      align: []\n    }], [{\n      color: []\n    }, {\n      background: []\n    }], [\"link\"], [\"blockquote\", \"code-block\"], [\"clean\"]]\n  };\n  const cleanContent = html => {\n    return DOMPurify.sanitize(html.trim().replace(/<p><br><\\/p>/g, \"\")); // ✅ Removes empty paragraphs\n  };\n  const saveNote = () => {\n    const cleanedTitle = note.title.trim();\n    const cleanedContent = cleanContent(note.content);\n    if (!cleanedTitle || !cleanedContent) {\n      alert(\"Title and content cannot be empty.\");\n      return;\n    }\n    let updatedNotes = [...notes];\n    const newNote = {\n      title: cleanedTitle,\n      content: cleanedContent,\n      id: editingNoteId || Date.now()\n    };\n    if (editingNoteId) {\n      updatedNotes = updatedNotes.map(n => n.id === editingNoteId ? newNote : n);\n    } else {\n      updatedNotes.unshift(newNote);\n    }\n    setNotes(updatedNotes);\n    localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingNoteId(null);\n  };\n  const editNote = note => {\n    setEditingNoteId(note.id);\n    setNote({\n      title: note.title,\n      content: note.content\n    });\n  };\n  const deleteNote = noteId => {\n    const updatedNotes = notes.filter(n => n.id !== noteId);\n    setNotes(updatedNotes);\n    localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n  };\n  const clearAllNotes = () => {\n    setNotes([]);\n    localStorage.removeItem(\"notes\");\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-manager-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Note Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: note.title,\n        onChange: e => setNote({\n          ...note,\n          title: e.target.value\n        }),\n        className: \"note-title-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: note.content,\n        onChange: content => setNote({\n          ...note,\n          content\n        }),\n        modules: modules,\n        className: \"note-content-quill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveNote,\n        className: \"save-button\",\n        children: editingNoteId ? \"Update Note\" : \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearAllNotes,\n      className: \"clear-button\",\n      children: \"Clear All Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"notes-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-content\",\n              dangerouslySetInnerHTML: {\n                __html: cleanContent(note.content)\n              } // ✅ Ensures formatted content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editNote(note),\n              className: \"edit-button\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteNote(note.id),\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteManager, \"uXtjDJcLVLC+jCtEsWjVtBVxLto=\");\n_c = NoteManager;\nexport default NoteManager;\nvar _c;\n$RefreshReg$(_c, \"NoteManager\");","map":{"version":3,"names":["React","useState","useEffect","ReactQuill","DOMPurify","jsxDEV","_jsxDEV","NoteManager","_s","notes","setNotes","loading","setLoading","note","setNote","title","content","editingNoteId","setEditingNoteId","storedNotes","JSON","parse","localStorage","getItem","modules","toolbar","header","font","list","align","color","background","cleanContent","html","sanitize","trim","replace","saveNote","cleanedTitle","cleanedContent","alert","updatedNotes","newNote","id","Date","now","map","n","unshift","setItem","stringify","editNote","deleteNote","noteId","filter","clearAllNotes","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/NoteManager.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport DOMPurify from \"dompurify\"; // ✅ Prevents raw HTML injection\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./NoteManager.css\";\r\n\r\nconst NoteManager = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [note, setNote] = useState({ title: \"\", content: \"\" });\r\n  const [editingNoteId, setEditingNoteId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\r\n    setNotes(storedNotes);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [\"bold\", \"italic\", \"underline\"],\r\n      [{ align: [] }],\r\n      [{ color: [] }, { background: [] }],\r\n      [\"link\"],\r\n      [\"blockquote\", \"code-block\"],\r\n      [\"clean\"],\r\n    ],\r\n  };\r\n\r\n  const cleanContent = (html) => {\r\n    return DOMPurify.sanitize(html.trim().replace(/<p><br><\\/p>/g, \"\")); // ✅ Removes empty paragraphs\r\n  };\r\n\r\n  const saveNote = () => {\r\n    const cleanedTitle = note.title.trim();\r\n    const cleanedContent = cleanContent(note.content);\r\n\r\n    if (!cleanedTitle || !cleanedContent) {\r\n      alert(\"Title and content cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    let updatedNotes = [...notes];\r\n    const newNote = { title: cleanedTitle, content: cleanedContent, id: editingNoteId || Date.now() };\r\n\r\n    if (editingNoteId) {\r\n      updatedNotes = updatedNotes.map((n) => (n.id === editingNoteId ? newNote : n));\r\n    } else {\r\n      updatedNotes.unshift(newNote);\r\n    }\r\n\r\n    setNotes(updatedNotes);\r\n    localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\r\n    setNote({ title: \"\", content: \"\" });\r\n    setEditingNoteId(null);\r\n  };\r\n\r\n  const editNote = (note) => {\r\n    setEditingNoteId(note.id);\r\n    setNote({ title: note.title, content: note.content });\r\n  };\r\n\r\n  const deleteNote = (noteId) => {\r\n    const updatedNotes = notes.filter((n) => n.id !== noteId);\r\n    setNotes(updatedNotes);\r\n    localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\r\n  };\r\n\r\n  const clearAllNotes = () => {\r\n    setNotes([]);\r\n    localStorage.removeItem(\"notes\");\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"note-manager-container\">\r\n      <h2>Note Manager</h2>\r\n\r\n      <div className=\"note-editor\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={note.title}\r\n          onChange={(e) => setNote({ ...note, title: e.target.value })}\r\n          className=\"note-title-input\"\r\n        />\r\n        <ReactQuill\r\n          value={note.content}\r\n          onChange={(content) => setNote({ ...note, content })}\r\n          modules={modules}\r\n          className=\"note-content-quill\"\r\n        />\r\n        <button onClick={saveNote} className=\"save-button\">\r\n          {editingNoteId ? \"Update Note\" : \"Add Note\"}\r\n        </button>\r\n      </div>\r\n\r\n      <h3>All Notes</h3>\r\n      <button onClick={clearAllNotes} className=\"clear-button\">\r\n        Clear All Notes\r\n      </button>\r\n      <table className=\"notes-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Content</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notes.map((note) => (\r\n            <tr key={note.id}>\r\n              <td>{note.title}</td>\r\n              <td>\r\n                <div\r\n                  className=\"note-content\"\r\n                  dangerouslySetInnerHTML={{ __html: cleanContent(note.content) }} // ✅ Ensures formatted content\r\n                />\r\n              </td>\r\n              <td>\r\n                <button onClick={() => editNote(note)} className=\"edit-button\">\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => deleteNote(note.id)}\r\n                  className=\"delete-button\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}