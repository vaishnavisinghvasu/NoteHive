{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Notes_world\\\\educational-website\\\\client\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import '../css/AdminPanel.css';  \n// const AdminPanel = () => {\n//   const navigate = useNavigate();\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const userRole = localStorage.getItem(\"role\");\n//     const token = localStorage.getItem(\"token\");\n\n//     if (!userRole || userRole !== \"admin\" || !token) {\n//       navigate(\"/login\");\n//       return;\n//     }\n\n//     fetchUsers(token);\n//   }, [navigate]);\n\n//   // Fetch users\n//   const fetchUsers = async (token) => {\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/users\", {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       if (!response.ok) throw new Error(\"Failed to fetch users\");\n\n//       const data = await response.json();\n//       setUsers(data);\n//     } catch (error) {\n//       console.error(\"üö® Error fetching users:\", error.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Change user role to admin\n//   const changeRole = async (userId) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n\n//       const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\n//         body: JSON.stringify({ role: \"admin\" }),\n//       });\n\n//       if (!response.ok) throw new Error(\"Failed to update role\");\n\n//       fetchUsers(token); // Refresh user list after role change\n//     } catch (error) {\n//       console.error(\"Failed to update role:\", error);\n//     }\n//   };\n\n//   // Delete a user\n//   const deleteUser = async (userId) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n\n//       if (!token) {\n//         console.error(\"‚ùå No token found. User might not be logged in.\");\n//         return;\n//       }\n\n//       console.log(`üîπ Sending DELETE request for user ID: ${userId}`);\n\n//       const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//       });\n\n//       const data = await response.json();\n//       console.log(\"üîπ API Response:\", data);\n\n//       if (!response.ok) {\n//         throw new Error(data.message || \"Failed to delete user\");\n//       }\n\n//       console.log(\"‚úÖ User deleted successfully.\");\n//       fetchUsers(localStorage.getItem(\"token\")); // Refresh user list\n//     } catch (error) {\n//       console.error(\"‚ùå Failed to delete user:\", error);\n//     }\n//   };\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>Admin Panel</h2>\n\n//       {/* User Management */}\n//       <h3>User Management</h3>\n//       <table border=\"1\">\n//         <thead>\n//           <tr>\n//             <th>Username</th>\n//             <th>Email</th>\n//             <th>Role</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user._id}>\n//               <td>{user.username}</td>\n//               <td>{user.email}</td>\n//               <td>{user.role}</td>\n//               <td>\n//                 {user.role !== \"admin\" && (\n//                   <button onClick={() => changeRole(user._id)}>Promote to Admin</button>\n//                 )}\n//                 <button onClick={() => deleteUser(user._id)} style={{ marginLeft: \"10px\" }}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default AdminPanel;\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../css/AdminPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [deletingUserId, setDeletingUserId] = useState(null); // Track which user is being deleted\n\n  useEffect(() => {\n    const userRole = localStorage.getItem(\"role\");\n    const token = localStorage.getItem(\"token\");\n    if (!userRole || userRole !== \"admin\" || !token) {\n      navigate(\"/login\");\n      return;\n    }\n    fetchUsers(token);\n  }, [navigate]);\n\n  // Fetch users\n  const fetchUsers = async token => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch users\");\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error(\"üö® Error fetching users:\", error.message);\n      alert(\"Failed to load users. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Change user role (promote to admin or degrade to user)\n  const changeRole = async (userId, role) => {\n    const action = role === \"admin\" ? \"promote to admin\" : \"degrade to user\";\n    const confirmAction = window.confirm(`Are you sure you want to ${action} this user?`);\n    if (!confirmAction) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      const endpoint = role === \"admin\" ? `http://localhost:5000/api/promote/${userId}` : `http://localhost:5000/api/demote/${userId}`;\n      const response = await fetch(endpoint, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          role\n        })\n      });\n      if (!response.ok) throw new Error(`Failed to update role to ${role}`);\n      console.log(`‚úÖ User role updated to ${role} successfully.`);\n      alert(`User role updated to ${role} successfully.`);\n      fetchUsers(token);\n    } catch (error) {\n      console.error(`Failed to update role to ${role}:`, error.message);\n      alert(`Failed to update role: ${error.message}`);\n    }\n  };\n\n  // Delete a user\n  const deleteUser = async (userId, username, email) => {\n    const confirmDelete = window.confirm(`Are you sure you want to delete user \"${username}\"? This action cannot be undone.`);\n    if (!confirmDelete) return;\n    setDeletingUserId(userId);\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        console.error(\"‚ùå No token found. User might not be logged in.\");\n        alert(\"Session expired. Please log in again.\");\n        navigate(\"/login\");\n        return;\n      }\n      console.log(`üîπ Sending DELETE request for user ID: ${userId}`);\n      const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      console.log(\"üîπ API Response:\", data);\n      if (!response.ok) {\n        throw new Error(data.message || \"Failed to delete user\");\n      }\n      console.log(\"‚úÖ User deleted successfully.\");\n      alert(`User \"${username}\" deleted successfully.`);\n      await fetchUsers(token);\n    } catch (error) {\n      console.error(\"‚ùå Failed to delete user:\", error.message);\n      alert(`Failed to delete user: ${error.message}`);\n    } finally {\n      setDeletingUserId(null);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 23\n  }, this);\n\n  // Prevent degrading the last admin\n  const adminCount = users.filter(user => user.role === \"admin\").length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => {\n          const canDegrade = user.role === \"admin\" && adminCount > 1;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [canDegrade ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"degrade\",\n                onClick: () => changeRole(user._id, \"user\"),\n                children: \"Degrade to User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this) : user.role !== \"admin\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"promote\",\n                onClick: () => changeRole(user._id, \"admin\"),\n                children: \"Promote to Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteUser(user._id, user.username, user.email),\n                className: \"delete\",\n                disabled: deletingUserId === user._id,\n                children: deletingUserId === user._id ? \"Deleting...\" : \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"XG6Sdsrel9n6gk52CPLGE9Gp6us=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AdminPanel","_s","navigate","users","setUsers","loading","setLoading","deletingUserId","setDeletingUserId","userRole","localStorage","getItem","token","fetchUsers","response","fetch","headers","Authorization","ok","Error","data","json","error","console","message","alert","changeRole","userId","role","action","confirmAction","window","confirm","endpoint","method","body","JSON","stringify","log","deleteUser","username","email","confirmDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","adminCount","filter","user","length","border","map","canDegrade","className","onClick","_id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/AdminPanel.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import '../css/AdminPanel.css';  \r\n// const AdminPanel = () => {\r\n//   const navigate = useNavigate();\r\n//   const [users, setUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const userRole = localStorage.getItem(\"role\");\r\n//     const token = localStorage.getItem(\"token\");\r\n\r\n//     if (!userRole || userRole !== \"admin\" || !token) {\r\n//       navigate(\"/login\");\r\n//       return;\r\n//     }\r\n\r\n//     fetchUsers(token);\r\n//   }, [navigate]);\r\n\r\n//   // Fetch users\r\n//   const fetchUsers = async (token) => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/users\", {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       if (!response.ok) throw new Error(\"Failed to fetch users\");\r\n\r\n//       const data = await response.json();\r\n//       setUsers(data);\r\n//     } catch (error) {\r\n//       console.error(\"üö® Error fetching users:\", error.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Change user role to admin\r\n//   const changeRole = async (userId) => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n\r\n//       const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\r\n//         method: \"PUT\",\r\n//         headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n//         body: JSON.stringify({ role: \"admin\" }),\r\n//       });\r\n\r\n//       if (!response.ok) throw new Error(\"Failed to update role\");\r\n\r\n//       fetchUsers(token); // Refresh user list after role change\r\n//     } catch (error) {\r\n//       console.error(\"Failed to update role:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Delete a user\r\n//   const deleteUser = async (userId) => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n\r\n//       if (!token) {\r\n//         console.error(\"‚ùå No token found. User might not be logged in.\");\r\n//         return;\r\n//       }\r\n\r\n//       console.log(`üîπ Sending DELETE request for user ID: ${userId}`);\r\n\r\n//       const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n//         method: \"DELETE\",\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       console.log(\"üîπ API Response:\", data);\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(data.message || \"Failed to delete user\");\r\n//       }\r\n\r\n//       console.log(\"‚úÖ User deleted successfully.\");\r\n//       fetchUsers(localStorage.getItem(\"token\")); // Refresh user list\r\n//     } catch (error) {\r\n//       console.error(\"‚ùå Failed to delete user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Admin Panel</h2>\r\n\r\n//       {/* User Management */}\r\n//       <h3>User Management</h3>\r\n//       <table border=\"1\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Username</th>\r\n//             <th>Email</th>\r\n//             <th>Role</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user._id}>\r\n//               <td>{user.username}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.role}</td>\r\n//               <td>\r\n//                 {user.role !== \"admin\" && (\r\n//                   <button onClick={() => changeRole(user._id)}>Promote to Admin</button>\r\n//                 )}\r\n//                 <button onClick={() => deleteUser(user._id)} style={{ marginLeft: \"10px\" }}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminPanel;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../css/AdminPanel.css';  \r\n\r\nconst AdminPanel = () => {\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [deletingUserId, setDeletingUserId] = useState(null); // Track which user is being deleted\r\n\r\n  useEffect(() => {\r\n    const userRole = localStorage.getItem(\"role\");\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (!userRole || userRole !== \"admin\" || !token) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    fetchUsers(token);\r\n  }, [navigate]);\r\n\r\n  // Fetch users\r\n  const fetchUsers = async (token) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to fetch users\");\r\n\r\n      const data = await response.json();\r\n      setUsers(data);\r\n    } catch (error) {\r\n      console.error(\"üö® Error fetching users:\", error.message);\r\n      alert(\"Failed to load users. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Change user role (promote to admin or degrade to user)\r\n  const changeRole = async (userId, role) => {\r\n    const action = role === \"admin\" ? \"promote to admin\" : \"degrade to user\";\r\n    const confirmAction = window.confirm(\r\n      `Are you sure you want to ${action} this user?`\r\n    );\r\n    if (!confirmAction) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const endpoint =\r\n        role === \"admin\"\r\n          ? `http://localhost:5000/api/promote/${userId}`\r\n          : `http://localhost:5000/api/demote/${userId}`;\r\n\r\n      const response = await fetch(endpoint, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n        body: JSON.stringify({ role }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Failed to update role to ${role}`);\r\n\r\n      console.log(`‚úÖ User role updated to ${role} successfully.`);\r\n      alert(`User role updated to ${role} successfully.`);\r\n\r\n      fetchUsers(token);\r\n    } catch (error) {\r\n      console.error(`Failed to update role to ${role}:`, error.message);\r\n      alert(`Failed to update role: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Delete a user\r\n  const deleteUser = async (userId, username, email) => {\r\n    const confirmDelete = window.confirm(\r\n      `Are you sure you want to delete user \"${username}\"? This action cannot be undone.`\r\n    );\r\n    if (!confirmDelete) return;\r\n\r\n    setDeletingUserId(userId);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (!token) {\r\n        console.error(\"‚ùå No token found. User might not be logged in.\");\r\n        alert(\"Session expired. Please log in again.\");\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      console.log(`üîπ Sending DELETE request for user ID: ${userId}`);\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"üîπ API Response:\", data);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Failed to delete user\");\r\n      }\r\n\r\n      console.log(\"‚úÖ User deleted successfully.\");\r\n      alert(`User \"${username}\" deleted successfully.`);\r\n\r\n      await fetchUsers(token);\r\n    } catch (error) {\r\n      console.error(\"‚ùå Failed to delete user:\", error.message);\r\n      alert(`Failed to delete user: ${error.message}`);\r\n    } finally {\r\n      setDeletingUserId(null);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  // Prevent degrading the last admin\r\n  const adminCount = users.filter(user => user.role === \"admin\").length;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Panel</h2>\r\n\r\n      {/* User Management */}\r\n      <h3>User Management</h3>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => {\r\n            const canDegrade = user.role === \"admin\" && adminCount > 1;\r\n            return (\r\n              <tr key={user._id}>\r\n                <td>{user.username}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.role}</td>\r\n                <td>\r\n                  {canDegrade ? (\r\n                    <button className=\"degrade\" onClick={() => changeRole(user._id, \"user\")}>\r\n                      Degrade to User\r\n                    </button>\r\n                  ) : user.role !== \"admin\" ? (\r\n                    <button className=\"promote\" onClick={() => changeRole(user._id, \"admin\")}>\r\n                      Promote to Admin\r\n                    </button>\r\n                  ) : null}\r\n                  <button\r\n                    onClick={() => deleteUser(user._id, user.username, user.email)}\r\n                    className=\"delete\"\r\n                    disabled={deletingUserId === user._id}\r\n                  >\r\n                    {deletingUserId === user._id ? \"Deleting...\" : \"Delete\"}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}