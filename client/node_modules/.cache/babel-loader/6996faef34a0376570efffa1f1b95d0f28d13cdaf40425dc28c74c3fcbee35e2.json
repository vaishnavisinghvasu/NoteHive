{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import \"../css/Profile.css\";\n\n// const Profile = () => {\n//   // Initialize state with data from localStorage\n//   const [user, setUser] = useState({\n//     name: \"\",\n//     email: \"\",\n//     bio: localStorage.getItem(\"bio\") || \"Turning ideas into reality, one line of code at a time.\",\n//     profilePic: localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\",\n//     phone: localStorage.getItem(\"phone\") || \"+1234567890\",\n//     location: localStorage.getItem(\"location\") || \"New York, USA\",\n//   });\n\n//   const [editMode, setEditMode] = useState(false);\n//   const [newBio, setNewBio] = useState(user.bio);\n//   const [newProfilePic, setNewProfilePic] = useState(null);\n//   const [newPhone, setNewPhone] = useState(user.phone);\n//   const [newLocation, setNewLocation] = useState(user.location);\n\n//   // Fetch username and email from localStorage on component mount\n//   useEffect(() => {\n//     const username = localStorage.getItem(\"username\") || \"John Doe\";\n//     const email = localStorage.getItem(\"email\") || \"john.doe@example.com\";\n\n//     console.log(\"Fetched email from localStorage:\", email); // Debugging line\n\n//     setUser((prevUser) => ({\n//       ...prevUser,\n//       name: username,\n//       email: email,\n//     }));\n//   }, []); // Empty dependency array ensures this runs only once on mount\n\n//   // Save changes to localStorage\n//   const handleSave = () => {\n//     localStorage.setItem(\"bio\", newBio);\n//     localStorage.setItem(\"phone\", newPhone);\n//     localStorage.setItem(\"location\", newLocation);\n//     if (newProfilePic) {\n//       localStorage.setItem(\"profilePic\", newProfilePic);\n//     }\n\n//     setUser({\n//       ...user,\n//       bio: newBio,\n//       profilePic: newProfilePic || user.profilePic,\n//       phone: newPhone,\n//       location: newLocation,\n//     });\n\n//     setEditMode(false);\n//   };\n\n//   // Handle image upload\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       const reader = new FileReader();\n//       reader.onloadend = () => {\n//         setNewProfilePic(reader.result);\n//       };\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   return (\n//     <div className=\"profile-container\">\n//       <div className=\"profile-card\">\n//         {/* Profile Header */}\n//         <div className=\"profile-header\">\n//           <img\n//             src={newProfilePic || user.profilePic}\n//             alt=\"Profile\"\n//             className=\"profile-pic\"\n//           />\n//           <h2>{user.name}</h2>\n//           <p className=\"email\">{user.email}</p>\n//           <p className=\"tagline\">{user.bio}</p>\n//         </div>\n\n//         {/* Edit Mode Fields */}\n//         {editMode && (\n//           <div className=\"edit-fields\">\n//             <textarea\n//               value={newBio}\n//               onChange={(e) => setNewBio(e.target.value)}\n//               placeholder=\"Write something about yourself...\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={newPhone}\n//               onChange={(e) => setNewPhone(e.target.value)}\n//               placeholder=\"Enter your phone number\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={newLocation}\n//               onChange={(e) => setNewLocation(e.target.value)}\n//               placeholder=\"Enter your location\"\n//             />\n//             <div className=\"upload-section\">\n//               <label htmlFor=\"profile-pic-upload\">Upload Profile Picture</label>\n//               <input\n//                 id=\"profile-pic-upload\"\n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 onChange={handleImageUpload}\n//               />\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Buttons */}\n//         <div className=\"button-group\">\n//           <button className=\"edit-btn\" onClick={() => setEditMode(!editMode)}>\n//             {editMode ? \"Cancel\" : \"Edit Profile\"}\n//           </button>\n//           {editMode && (\n//             <button className=\"save-btn\" onClick={handleSave}>\n//               Save Changes\n//             </button>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;","map":{"version":3,"names":[],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/Profile.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"../css/Profile.css\";\r\n\r\n// const Profile = () => {\r\n//   // Initialize state with data from localStorage\r\n//   const [user, setUser] = useState({\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     bio: localStorage.getItem(\"bio\") || \"Turning ideas into reality, one line of code at a time.\",\r\n//     profilePic: localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\",\r\n//     phone: localStorage.getItem(\"phone\") || \"+1234567890\",\r\n//     location: localStorage.getItem(\"location\") || \"New York, USA\",\r\n//   });\r\n\r\n//   const [editMode, setEditMode] = useState(false);\r\n//   const [newBio, setNewBio] = useState(user.bio);\r\n//   const [newProfilePic, setNewProfilePic] = useState(null);\r\n//   const [newPhone, setNewPhone] = useState(user.phone);\r\n//   const [newLocation, setNewLocation] = useState(user.location);\r\n\r\n//   // Fetch username and email from localStorage on component mount\r\n//   useEffect(() => {\r\n//     const username = localStorage.getItem(\"username\") || \"John Doe\";\r\n//     const email = localStorage.getItem(\"email\") || \"john.doe@example.com\";\r\n\r\n//     console.log(\"Fetched email from localStorage:\", email); // Debugging line\r\n\r\n//     setUser((prevUser) => ({\r\n//       ...prevUser,\r\n//       name: username,\r\n//       email: email,\r\n//     }));\r\n//   }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n//   // Save changes to localStorage\r\n//   const handleSave = () => {\r\n//     localStorage.setItem(\"bio\", newBio);\r\n//     localStorage.setItem(\"phone\", newPhone);\r\n//     localStorage.setItem(\"location\", newLocation);\r\n//     if (newProfilePic) {\r\n//       localStorage.setItem(\"profilePic\", newProfilePic);\r\n//     }\r\n\r\n//     setUser({\r\n//       ...user,\r\n//       bio: newBio,\r\n//       profilePic: newProfilePic || user.profilePic,\r\n//       phone: newPhone,\r\n//       location: newLocation,\r\n//     });\r\n\r\n//     setEditMode(false);\r\n//   };\r\n\r\n//   // Handle image upload\r\n//   const handleImageUpload = (e) => {\r\n//     const file = e.target.files[0];\r\n//     if (file) {\r\n//       const reader = new FileReader();\r\n//       reader.onloadend = () => {\r\n//         setNewProfilePic(reader.result);\r\n//       };\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"profile-container\">\r\n//       <div className=\"profile-card\">\r\n//         {/* Profile Header */}\r\n//         <div className=\"profile-header\">\r\n//           <img\r\n//             src={newProfilePic || user.profilePic}\r\n//             alt=\"Profile\"\r\n//             className=\"profile-pic\"\r\n//           />\r\n//           <h2>{user.name}</h2>\r\n//           <p className=\"email\">{user.email}</p>\r\n//           <p className=\"tagline\">{user.bio}</p>\r\n//         </div>\r\n\r\n//         {/* Edit Mode Fields */}\r\n//         {editMode && (\r\n//           <div className=\"edit-fields\">\r\n//             <textarea\r\n//               value={newBio}\r\n//               onChange={(e) => setNewBio(e.target.value)}\r\n//               placeholder=\"Write something about yourself...\"\r\n//             />\r\n//             <input\r\n//               type=\"text\"\r\n//               value={newPhone}\r\n//               onChange={(e) => setNewPhone(e.target.value)}\r\n//               placeholder=\"Enter your phone number\"\r\n//             />\r\n//             <input\r\n//               type=\"text\"\r\n//               value={newLocation}\r\n//               onChange={(e) => setNewLocation(e.target.value)}\r\n//               placeholder=\"Enter your location\"\r\n//             />\r\n//             <div className=\"upload-section\">\r\n//               <label htmlFor=\"profile-pic-upload\">Upload Profile Picture</label>\r\n//               <input\r\n//                 id=\"profile-pic-upload\"\r\n//                 type=\"file\"\r\n//                 accept=\"image/*\"\r\n//                 onChange={handleImageUpload}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-group\">\r\n//           <button className=\"edit-btn\" onClick={() => setEditMode(!editMode)}>\r\n//             {editMode ? \"Cancel\" : \"Edit Profile\"}\r\n//           </button>\r\n//           {editMode && (\r\n//             <button className=\"save-btn\" onClick={handleSave}>\r\n//               Save Changes\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}