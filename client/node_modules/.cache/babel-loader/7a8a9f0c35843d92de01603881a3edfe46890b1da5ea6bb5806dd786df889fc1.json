{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Notes_world\\\\educational-website\\\\client\\\\src\\\\components\\\\NoteManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteManager = () => {\n  _s();\n  const navigate = useNavigate();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  useEffect(() => {\n    const userRole = localStorage.getItem(\"role\");\n    const token = localStorage.getItem(\"token\");\n    if (!userRole || userRole !== \"admin\" || !token) {\n      navigate(\"/login\");\n      return;\n    }\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/notes\", {\n          headers: {\n            Authorization: `Bearer ${token}` // Include the token in the request\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch notes\");\n        }\n        const data = await response.json();\n        setNotes(data); // Update state with fetched notes\n      } catch (error) {\n        console.error(\"Error fetching notes:\", error.message);\n      } finally {\n        setLoading(false); // Set loading to false after the fetch is complete\n      }\n    };\n    fetchNotes();\n  }, [navigate]); // Added dependency on navigate to ensure redirection works\n\n  // Save or update note\n  const saveNote = async () => {\n    // Check if title or content is empty before sending the request\n    if (!note.title || !note.content) {\n      alert(\"Both title and content are required!\");\n      return; // Prevent submission\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const method = editingNoteId ? \"PUT\" : \"POST\";\n      const url = editingNoteId ? `http://localhost:5000/api/notes/${editingNoteId}` : \"http://localhost:5000/api/notes\";\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(note)\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || \"Failed to save note\");\n\n      // Refresh the notes list\n      const newNotesResponse = await fetch(\"http://localhost:5000/api/notes\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newNotes = await newNotesResponse.json();\n      setNotes(newNotes); // Update the notes list after adding/updating a note\n\n      setNote({\n        title: \"\",\n        content: \"\"\n      }); // Reset the form\n      setEditingNoteId(null); // Reset editing state\n    } catch (error) {\n      console.error(\"Error saving note:\", error.message);\n    }\n  };\n\n  // Edit note\n  const editNote = note => {\n    setEditingNoteId(note._id);\n    setNote({\n      title: note.title,\n      content: note.content\n    });\n  };\n\n  // Delete note\n  const deleteNote = async noteId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/notes/${noteId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error(\"Failed to delete note\");\n\n      // Refresh the notes list\n      const newNotesResponse = await fetch(\"http://localhost:5000/api/notes\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newNotes = await newNotesResponse.json();\n      setNotes(newNotes); // Update the notes list after deleting a note\n    } catch (error) {\n      console.error(\"Error deleting note:\", error.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Note Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: note.title,\n        onChange: e => setNote({\n          ...note,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: note.content,\n        onChange: e => setNote({\n          ...note,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveNote,\n        children: editingNoteId ? \"Update Note\" : \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editNote(note),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteNote(note._id),\n              style: {\n                marginLeft: \"10px\"\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, note._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteManager, \"0GRmkuGOjEPZOT6YFNDiZ8C0RgY=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteManager;\nexport default NoteManager;\nvar _c;\n$RefreshReg$(_c, \"NoteManager\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","NoteManager","_s","navigate","notes","setNotes","loading","setLoading","note","setNote","title","content","editingNoteId","setEditingNoteId","userRole","localStorage","getItem","token","fetchNotes","response","fetch","headers","Authorization","ok","Error","data","json","error","console","message","saveNote","alert","method","url","body","JSON","stringify","newNotesResponse","newNotes","editNote","_id","deleteNote","noteId","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","border","map","style","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/NoteManager.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NoteManager = () => {\r\n  const navigate = useNavigate();\r\n  const [notes, setNotes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [note, setNote] = useState({ title: \"\", content: \"\" });\r\n  const [editingNoteId, setEditingNoteId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userRole = localStorage.getItem(\"role\");\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (!userRole || userRole !== \"admin\" || !token) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/notes\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Include the token in the request\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch notes\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setNotes(data); // Update state with fetched notes\r\n      } catch (error) {\r\n        console.error(\"Error fetching notes:\", error.message);\r\n      } finally {\r\n        setLoading(false); // Set loading to false after the fetch is complete\r\n      }\r\n    };\r\n\r\n    fetchNotes();\r\n  }, [navigate]); // Added dependency on navigate to ensure redirection works\r\n\r\n  // Save or update note\r\n  const saveNote = async () => {\r\n    // Check if title or content is empty before sending the request\r\n    if (!note.title || !note.content) {\r\n      alert(\"Both title and content are required!\");\r\n      return; // Prevent submission\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const method = editingNoteId ? \"PUT\" : \"POST\";\r\n      const url = editingNoteId\r\n        ? `http://localhost:5000/api/notes/${editingNoteId}`\r\n        : \"http://localhost:5000/api/notes\";\r\n\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(note),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.message || \"Failed to save note\");\r\n\r\n      // Refresh the notes list\r\n      const newNotesResponse = await fetch(\"http://localhost:5000/api/notes\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      const newNotes = await newNotesResponse.json();\r\n      setNotes(newNotes); // Update the notes list after adding/updating a note\r\n\r\n      setNote({ title: \"\", content: \"\" }); // Reset the form\r\n      setEditingNoteId(null); // Reset editing state\r\n    } catch (error) {\r\n      console.error(\"Error saving note:\", error.message);\r\n    }\r\n  };\r\n\r\n  // Edit note\r\n  const editNote = (note) => {\r\n    setEditingNoteId(note._id);\r\n    setNote({ title: note.title, content: note.content });\r\n  };\r\n\r\n  // Delete note\r\n  const deleteNote = async (noteId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const response = await fetch(`http://localhost:5000/api/notes/${noteId}`, {\r\n        method: \"DELETE\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to delete note\");\r\n\r\n      // Refresh the notes list\r\n      const newNotesResponse = await fetch(\"http://localhost:5000/api/notes\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      const newNotes = await newNotesResponse.json();\r\n      setNotes(newNotes); // Update the notes list after deleting a note\r\n    } catch (error) {\r\n      console.error(\"Error deleting note:\", error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Note Manager</h2>\r\n\r\n      {/* Note Editor Form */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={note.title}\r\n          onChange={(e) => setNote({ ...note, title: e.target.value })}\r\n        />\r\n        <textarea\r\n          placeholder=\"Content\"\r\n          value={note.content}\r\n          onChange={(e) => setNote({ ...note, content: e.target.value })}\r\n        />\r\n        <button onClick={saveNote}>\r\n          {editingNoteId ? \"Update Note\" : \"Add Note\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Notes List */}\r\n      <h3>All Notes</h3>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Content</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notes.map((note) => (\r\n            <tr key={note._id}>\r\n              <td>{note.title}</td>\r\n              <td>{note.content}</td>\r\n              <td>\r\n                <button onClick={() => editNote(note)}>Edit</button>\r\n                <button\r\n                  onClick={() => deleteNote(note._id)}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}