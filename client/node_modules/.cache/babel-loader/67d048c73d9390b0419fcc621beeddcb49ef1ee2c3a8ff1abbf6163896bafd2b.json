{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Notes_world\\\\educational-website\\\\client\\\\src\\\\components\\\\Notes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Notes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notes = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchNotes = () => {\n      const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n      setNotes(storedNotes);\n      setLoading(false);\n    };\n    fetchNotes();\n  }, []);\n\n  // Function to clean HTML while preserving line breaks and lists\n  const stripHtml = html => {\n    return html.replace(/<\\/p>/g, \"\\n\") // Convert paragraphs to newlines\n    .replace(/<li>/g, \"\\n• \") // Convert list items to bullet points\n    .replace(/<\\/li>/g, \"\") // Remove closing </li>\n    .replace(/<\\/?[^>]+(>|$)/g, \"\") // Remove all other HTML tags\n    .trim();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading notes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notes available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-front\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-back\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"note-content\",\n              children: stripHtml(note.content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/notes/${note.id}`,\n              className: \"note-link\",\n              children: \"View Note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Notes, \"I4K4w9oJpuKUIeK96G/eoa0AU7g=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Notes","_s","notes","setNotes","loading","setLoading","fetchNotes","storedNotes","JSON","parse","localStorage","getItem","stripHtml","html","replace","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","note","title","content","to","id","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/Notes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Notes.css\";\r\n\r\nconst Notes = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchNotes = () => {\r\n      const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\r\n      setNotes(storedNotes);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  // Function to clean HTML while preserving line breaks and lists\r\n  const stripHtml = (html) => {\r\n    return html\r\n      .replace(/<\\/p>/g, \"\\n\") // Convert paragraphs to newlines\r\n      .replace(/<li>/g, \"\\n• \") // Convert list items to bullet points\r\n      .replace(/<\\/li>/g, \"\") // Remove closing </li>\r\n      .replace(/<\\/?[^>]+(>|$)/g, \"\") // Remove all other HTML tags\r\n      .trim();\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading notes...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"notes-container\">\r\n      <div className=\"notes-header\">\r\n        <h2>My Notes</h2>\r\n      </div>\r\n\r\n      <div className=\"notes-grid\">\r\n        {notes.length === 0 ? (\r\n          <p>No notes available.</p>\r\n        ) : (\r\n          notes.map((note) => (\r\n            <div key={note.id} className=\"note-card\">\r\n              <div className=\"note-inner\">\r\n                <div className=\"note-front\">\r\n                  <h3>{note.title}</h3>\r\n                </div>\r\n\r\n                <div className=\"note-back\">\r\n                  <h3>{note.title}</h3>\r\n                  <pre className=\"note-content\">{stripHtml(note.content)}</pre> {/* ✅ Using <pre> to preserve spacing */}\r\n                  <Link to={`/notes/${note.id}`} className=\"note-link\">\r\n                    View Note\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MACnER,QAAQ,CAACI,WAAW,CAAC;MACrBF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,SAAS,GAAIC,IAAI,IAAK;IAC1B,OAAOA,IAAI,CACRC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAAA,CACxBA,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAAA,CACzBA,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAAA,CACvBA,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;IAAA,CAC/BC,IAAI,CAAC,CAAC;EACX,CAAC;EAED,IAAIX,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxD;EAEA,oBACEtB,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BlB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BlB,OAAA;QAAAkB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eAENtB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBf,KAAK,CAACoB,MAAM,KAAK,CAAC,gBACjBvB,OAAA;QAAAkB,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE1BnB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACbzB,OAAA;QAAmBiB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACtClB,OAAA;UAAKiB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBlB,OAAA;YAAKiB,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBlB,OAAA;cAAAkB,QAAA,EAAKO,IAAI,CAACC;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eAENtB,OAAA;YAAKiB,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBlB,OAAA;cAAAkB,QAAA,EAAKO,IAAI,CAACC;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBtB,OAAA;cAAKiB,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEL,SAAS,CAACY,IAAI,CAACE,OAAO;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,eAC9DtB,OAAA,CAACF,IAAI;cAAC8B,EAAE,EAAE,UAAUH,IAAI,CAACI,EAAE,EAAG;cAACZ,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAErD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAbEG,IAAI,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcZ,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3DID,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AA6DX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}