{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOuterHTML = getOuterHTML;\nexports.getInnerHTML = getInnerHTML;\nexports.getText = getText;\nexports.textContent = textContent;\nexports.innerText = innerText;\nvar domhandler_1 = require(\"domhandler\");\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n  return (0, dom_serializer_1.default)(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n  return (0, domhandler_1.hasChildren)(node) ? node.children.map(function (node) {\n    return getOuterHTML(node, options);\n  }).join(\"\") : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if ((0, domhandler_1.isTag)(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if ((0, domhandler_1.isCDATA)(node)) return getText(node.children);\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n  if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {\n    return textContent(node.children);\n  }\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n  if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {\n    return innerText(node.children);\n  }\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}","map":{"version":3,"names":["exports","getOuterHTML","getInnerHTML","getText","textContent","innerText","domhandler_1","require","dom_serializer_1","__importDefault","domelementtype_1","node","options","default","hasChildren","children","map","join","Array","isArray","isTag","name","isCDATA","isText","data","isComment","type","ElementType","Tag"],"sources":["https://raw.githubusercontent.com/fb55/domutils/0ab8bcf1ecfc70dfc93291a4cb2496578ac25e9c/src/stringify.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}