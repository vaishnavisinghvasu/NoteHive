{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Notes_world\\\\educational-website\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./components/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./components/Login\";\n// import Register from \"./components/Register\";\n// import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n\n// // Import Admin Components\n// import AdminDashboard from \"./components/admin/AdminDashboard\";\n// import ManageNotes from \"./components/admin/ManageNotes\";\n// import AddNote from \"./components/admin/AddNote\";\n// import EditNote from \"./components/admin/EditNote\";\n\n// // Import ProtectedRoute\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import AdminProtectedRoute from \"./components/AdminProtectedRoute\";\n\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes, setNotes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   const PrivateRoute = ({ children }) => {\n//     const role = localStorage.getItem(\"role\");\n//     return role === \"admin\" ? children : <Navigate to=\"/\" />;\n//   };\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n\n//     window.addEventListener(\"storage\", handleStorageChange);\n//     return () => window.removeEventListener(\"storage\", handleStorageChange);\n//   }, []);\n\n//   const addNote = (newNote) => {\n//     const updatedNotes = [...notes, newNote];\n//     setNotes(updatedNotes);\n//     localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n//   };\n\n//   const deleteNote = (id) => {\n//     const updatedNotes = notes.filter((note) => note.id !== id);\n//     setNotes(updatedNotes);\n//     localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n//   };\n\n//   return (\n//     <Router>\n//       <AppRoutes\n//         username={username}\n//         setUsername={setUsername}\n//         isAdmin={isAdmin}\n//         notes={notes}\n//         setNotes={setNotes}\n//         addNote={addNote}\n//         deleteNote={deleteNote}\n//       />\n//     </Router>\n//   );\n// };\n\n// const AppRoutes = ({ username, setUsername, isAdmin, notes, setNotes, addNote, deleteNote }) => {\n//   const location = useLocation(); // ✅ Get the current route\n\n//   return (\n//     <>\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n//           <Route index element={<Home />} />\n//           <Route path=\"about\" element={<About />} />\n//           <Route path=\"notes\" element={<Notes notes={notes} />} />\n//           <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n//           <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n//           <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n//         </Route>\n//         <Route\n//           path=\"/admin\"\n//           element={\n//             <PrivateRoute>\n//               <AdminPanel />\n//             </PrivateRoute>\n//           }\n//         />\n\n//         {/* Protected Routes (Requires Login) */}\n//         <Route element={<ProtectedRoute username={username} />}>\n//           <Route path=\"profile\" element={<Profile />} />\n//           <Route path=\"create-profile\" element={<ProfileCreation />} />\n//         </Route>\n\n//         {/* Admin Routes (Requires Admin Access) */}\n//         <Route element={<AdminProtectedRoute isAdmin={isAdmin} />}>\n//           <Route path=\"/admin\" element={<AdminDashboard />} />\n//           <Route path=\"/admin/manage-notes\" element={<ManageNotes notes={notes} deleteNote={deleteNote} />} />\n//           <Route path=\"/admin/add-note\" element={<AddNote addNote={addNote} />} />\n//           <Route path=\"/admin/edit-note/:noteId\" element={<EditNote notes={notes} setNotes={setNotes} />} />\n//         </Route>\n\n//         {/* Redirect unknown routes */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n\n//       {/* Show FAQ only on the Home page */}\n//       {location.pathname === \"/\" && <FAQ />}\n//     </>\n//   );\n// };\n\n// export default App;\nconst AppRoutes = ({\n  username,\n  setUsername,\n  isAdmin,\n  notes,\n  setNotes,\n  addNote,\n  deleteNote\n}) => {\n  _s();\n  const location = useLocation(); // ✅ Get the current route\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard1, {\n          username: username,\n          setUsername: setUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"notes\",\n          element: /*#__PURE__*/_jsxDEV(Notes, {\n            notes: notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"notes/:noteId\",\n          element: /*#__PURE__*/_jsxDEV(NoteDetails, {\n            notes: notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setUsername: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            setUsername: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"create-profile\",\n          element: /*#__PURE__*/_jsxDEV(ProfileCreation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(AdminProtectedRoute, {\n          isAdmin: isAdmin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/manage-notes\",\n          element: /*#__PURE__*/_jsxDEV(ManageNotes, {\n            notes: notes,\n            deleteNote: deleteNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/add-note\",\n          element: /*#__PURE__*/_jsxDEV(AddNote, {\n            addNote: addNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/edit-note/:noteId\",\n          element: /*#__PURE__*/_jsxDEV(EditNote, {\n            notes: notes,\n            setNotes: setNotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), location.pathname === \"/\" && /*#__PURE__*/_jsxDEV(FAQ, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true);\n};\n_s(AppRoutes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", true);\n_c = AppRoutes;\nexport default AppRoutes;\nvar _c;\n$RefreshReg$(_c, \"AppRoutes\");","map":{"version":3,"names":["AppRoutes","username","setUsername","isAdmin","notes","setNotes","addNote","deleteNote","_s","location","useLocation","_jsxDEV","_Fragment","children","Routes","Route","path","element","Dashboard1","fileName","_jsxFileName","lineNumber","columnNumber","index","Home","About","Notes","NoteDetails","Login","Register","ProtectedRoute","Profile","ProfileCreation","AdminProtectedRoute","AdminDashboard","ManageNotes","AddNote","EditNote","Navigate","to","pathname","FAQ","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./components/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./components/Login\";\n// import Register from \"./components/Register\";\n// import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n\n// // Import Admin Components\n// import AdminDashboard from \"./components/admin/AdminDashboard\";\n// import ManageNotes from \"./components/admin/ManageNotes\";\n// import AddNote from \"./components/admin/AddNote\";\n// import EditNote from \"./components/admin/EditNote\";\n\n// // Import ProtectedRoute\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import AdminProtectedRoute from \"./components/AdminProtectedRoute\";\n\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes, setNotes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   const PrivateRoute = ({ children }) => {\n//     const role = localStorage.getItem(\"role\");\n//     return role === \"admin\" ? children : <Navigate to=\"/\" />;\n//   };\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n\n//     window.addEventListener(\"storage\", handleStorageChange);\n//     return () => window.removeEventListener(\"storage\", handleStorageChange);\n//   }, []);\n\n//   const addNote = (newNote) => {\n//     const updatedNotes = [...notes, newNote];\n//     setNotes(updatedNotes);\n//     localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n//   };\n\n//   const deleteNote = (id) => {\n//     const updatedNotes = notes.filter((note) => note.id !== id);\n//     setNotes(updatedNotes);\n//     localStorage.setItem(\"notes\", JSON.stringify(updatedNotes));\n//   };\n\n//   return (\n//     <Router>\n//       <AppRoutes\n//         username={username}\n//         setUsername={setUsername}\n//         isAdmin={isAdmin}\n//         notes={notes}\n//         setNotes={setNotes}\n//         addNote={addNote}\n//         deleteNote={deleteNote}\n//       />\n//     </Router>\n//   );\n// };\n\n// const AppRoutes = ({ username, setUsername, isAdmin, notes, setNotes, addNote, deleteNote }) => {\n//   const location = useLocation(); // ✅ Get the current route\n\n//   return (\n//     <>\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n//           <Route index element={<Home />} />\n//           <Route path=\"about\" element={<About />} />\n//           <Route path=\"notes\" element={<Notes notes={notes} />} />\n//           <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n//           <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n//           <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n//         </Route>\n//         <Route\n//           path=\"/admin\"\n//           element={\n//             <PrivateRoute>\n//               <AdminPanel />\n//             </PrivateRoute>\n//           }\n//         />\n\n//         {/* Protected Routes (Requires Login) */}\n//         <Route element={<ProtectedRoute username={username} />}>\n//           <Route path=\"profile\" element={<Profile />} />\n//           <Route path=\"create-profile\" element={<ProfileCreation />} />\n//         </Route>\n\n//         {/* Admin Routes (Requires Admin Access) */}\n//         <Route element={<AdminProtectedRoute isAdmin={isAdmin} />}>\n//           <Route path=\"/admin\" element={<AdminDashboard />} />\n//           <Route path=\"/admin/manage-notes\" element={<ManageNotes notes={notes} deleteNote={deleteNote} />} />\n//           <Route path=\"/admin/add-note\" element={<AddNote addNote={addNote} />} />\n//           <Route path=\"/admin/edit-note/:noteId\" element={<EditNote notes={notes} setNotes={setNotes} />} />\n//         </Route>\n\n\n//         {/* Redirect unknown routes */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n\n//       {/* Show FAQ only on the Home page */}\n//       {location.pathname === \"/\" && <FAQ />}\n//     </>\n//   );\n// };\n\n// export default App;\nconst AppRoutes = ({ username, setUsername, isAdmin, notes, setNotes, addNote, deleteNote }) => {\n  const location = useLocation(); // ✅ Get the current route\n\n  return (\n    <>\n      <Routes>\n        {/* Public Routes */}\n        <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n          <Route index element={<Home />} />\n          <Route path=\"about\" element={<About />} />\n          <Route path=\"notes\" element={<Notes notes={notes} />} />\n          <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n          <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n          <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n        </Route>\n\n        {/* Protected Routes (Requires Login) */}\n        <Route element={<ProtectedRoute username={username} />}>\n          <Route path=\"profile\" element={<Profile />} />\n          <Route path=\"create-profile\" element={<ProfileCreation />} />\n        </Route>\n\n        {/* Admin Routes (Requires Admin Access) */}\n        <Route element={<AdminProtectedRoute isAdmin={isAdmin} />}>\n          <Route path=\"/admin\" element={<AdminDashboard />} />\n          <Route path=\"/admin/manage-notes\" element={<ManageNotes notes={notes} deleteNote={deleteNote} />} />\n          <Route path=\"/admin/add-note\" element={<AddNote addNote={addNote} />} />\n          <Route path=\"/admin/edit-note/:noteId\" element={<EditNote notes={notes} setNotes={setNotes} />} />\n        </Route>\n\n        {/* Redirect unknown routes */}\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n\n      {/* Show FAQ only on the Home page */}\n      {location.pathname === \"/\" && <FAQ />}\n    </>\n  );\n};\nexport default AppRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}