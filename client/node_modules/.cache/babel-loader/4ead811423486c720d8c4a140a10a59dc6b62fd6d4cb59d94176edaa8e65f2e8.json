{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// import { FaUserCircle, FaBars, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\n// import '../css/Dashboard.css';\n\n// const Dashboard1 = () => {\n//   const [menuOpen, setMenuOpen] = useState(false);\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n//   const [role, setRole] = useState(\"\"); // Start with an empty role\n\n//   const navigate = useNavigate();\n\n//   // Get role when component mounts\n//   useEffect(() => {\n//     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n//     setRole(storedRole || \"\"); // Ensure a valid role is set\n//   }, []);\n\n//   // Sync dark mode state\n//   useEffect(() => {\n//     document.body.classList.toggle(\"dark-mode\", darkMode);\n//     localStorage.setItem(\"darkMode\", darkMode);\n//   }, [darkMode]);\n\n//   const toggleMenu = () => setMenuOpen(!menuOpen);\n//   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"username\");\n//     localStorage.removeItem(\"role\"); // Remove role\n//     localStorage.removeItem(\"token\");\n//     setUsername(\"\");\n//     setRole(\"\"); // Clear role immediately\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className={`dashboard-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n//       <header className=\"taskbar\">\n//         <div className=\"taskbar-logo\">\n//           <h1>NoteHive</h1>\n//         </div>\n\n//         <nav className={`taskbar-nav ${menuOpen ? \"open\" : \"\"}`}>\n//           <ul>\n//             <li><Link to=\"/\">Home</Link></li>\n//             <li><Link to=\"about\">About</Link></li>\n//             <li><Link to=\"notes\">Notes</Link></li>\n//             <li><Link to=\"cp-trivia\">Trivia & Quizzes</Link></li>\n\n//             {/* Only show Admin Panel for users with role \"admin\" */}\n//             {role === \"admin\" && (\n//           <>\n//             <li><Link to=\"/admin\">Admin Panel</Link></li>\n//             <li><Link to=\"/admin/noteManager\">Note Manager</Link></li>\n//           </>\n//            )}\n//             {username ? (\n//               <li className=\"profile-dropdown\">\n//                 <span className=\"profile-trigger\">\n//                   <FaUserCircle className=\"profile-icon\" />\n//                   {username}\n//                 </span>\n//                 <ul className=\"dropdown-menu\">\n//                   <li onClick={() => navigate(\"/profile\")}>Profile</li>\n//                   <li onClick={() => navigate(\"/settings\")}>Settings</li>\n//                   <li onClick={handleLogout}>Logout</li>\n//                 </ul>\n//               </li>\n//             ) : (\n//               <>\n//                 <li><Link to=\"login\">Login</Link></li>\n//                 <li><Link to=\"register\">Sign Up</Link></li>\n//               </>\n//             )}\n\n//             {/* Dark mode toggle */}\n//             <li className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\n//               {darkMode ? <FaSun /> : <FaMoon />}\n//             </li>\n//           </ul>\n//         </nav>\n\n//         {/* Mobile menu toggle button */}\n//         <div className=\"menu-toggle\" onClick={toggleMenu}>\n//           {menuOpen ? <FaTimes /> : <FaBars />}\n//         </div>\n//       </header>\n\n//       <main className=\"main-content\">\n//         <Outlet />\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default Dashboard1;","map":{"version":3,"names":[],"sources":["C:/Users/vaish/OneDrive/Desktop/Notes_world/educational-website/client/src/components/Dashboard1.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\r\n// import { FaUserCircle, FaBars, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\r\n// import '../css/Dashboard.css';\r\n\r\n// const Dashboard1 = () => {\r\n//   const [menuOpen, setMenuOpen] = useState(false);\r\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\r\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\r\n//   const [role, setRole] = useState(\"\"); // Start with an empty role\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   // Get role when component mounts\r\n//   useEffect(() => {\r\n//     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\r\n//     setRole(storedRole || \"\"); // Ensure a valid role is set\r\n//   }, []);\r\n\r\n//   // Sync dark mode state\r\n//   useEffect(() => {\r\n//     document.body.classList.toggle(\"dark-mode\", darkMode);\r\n//     localStorage.setItem(\"darkMode\", darkMode);\r\n//   }, [darkMode]);\r\n\r\n//   const toggleMenu = () => setMenuOpen(!menuOpen);\r\n//   const toggleDarkMode = () => setDarkMode((prev) => !prev);\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"username\");\r\n//     localStorage.removeItem(\"role\"); // Remove role\r\n//     localStorage.removeItem(\"token\");\r\n//     setUsername(\"\");\r\n//     setRole(\"\"); // Clear role immediately\r\n//     navigate(\"/login\");\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`dashboard-container ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n//       <header className=\"taskbar\">\r\n//         <div className=\"taskbar-logo\">\r\n//           <h1>NoteHive</h1>\r\n//         </div>\r\n\r\n//         <nav className={`taskbar-nav ${menuOpen ? \"open\" : \"\"}`}>\r\n//           <ul>\r\n//             <li><Link to=\"/\">Home</Link></li>\r\n//             <li><Link to=\"about\">About</Link></li>\r\n//             <li><Link to=\"notes\">Notes</Link></li>\r\n//             <li><Link to=\"cp-trivia\">Trivia & Quizzes</Link></li>\r\n            \r\n\r\n//             {/* Only show Admin Panel for users with role \"admin\" */}\r\n//             {role === \"admin\" && (\r\n//           <>\r\n//             <li><Link to=\"/admin\">Admin Panel</Link></li>\r\n//             <li><Link to=\"/admin/noteManager\">Note Manager</Link></li>\r\n//           </>\r\n//            )}\r\n//             {username ? (\r\n//               <li className=\"profile-dropdown\">\r\n//                 <span className=\"profile-trigger\">\r\n//                   <FaUserCircle className=\"profile-icon\" />\r\n//                   {username}\r\n//                 </span>\r\n//                 <ul className=\"dropdown-menu\">\r\n//                   <li onClick={() => navigate(\"/profile\")}>Profile</li>\r\n//                   <li onClick={() => navigate(\"/settings\")}>Settings</li>\r\n//                   <li onClick={handleLogout}>Logout</li>\r\n//                 </ul>\r\n//               </li>\r\n//             ) : (\r\n//               <>\r\n//                 <li><Link to=\"login\">Login</Link></li>\r\n//                 <li><Link to=\"register\">Sign Up</Link></li>\r\n//               </>\r\n//             )}\r\n\r\n//             {/* Dark mode toggle */}\r\n//             <li className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\r\n//               {darkMode ? <FaSun /> : <FaMoon />}\r\n//             </li>\r\n//           </ul>\r\n//         </nav>\r\n\r\n//         {/* Mobile menu toggle button */}\r\n//         <div className=\"menu-toggle\" onClick={toggleMenu}>\r\n//           {menuOpen ? <FaTimes /> : <FaBars />}\r\n//         </div>\r\n//       </header>\r\n\r\n//       <main className=\"main-content\">\r\n//         <Outlet />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard1;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}